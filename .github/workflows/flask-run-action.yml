name: flask-run-action
on:
  push:
    branches:
      - main

jobs:
  build-image:
    runs-on : ubuntu-latest
    environment: DB_connection
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses : actions/checkout@v3
      -
        name: access to secrets
        run : |
          touch .env
          working-directory: ./Flask_server
          echo APP_SECRETKEY = '${{ secrets.APP_SECRETKEY }}' >> .env
          working-directory: ./Flask_server
          echo DB_IP = '${{ secrets.DB_IP }}' >> .env
          working-directory: ./Flask_server
          echo DB_PORT = '${{ secrets.DB_PORT }}' >> .env
          working-directory: ./Flask_server
          echo DB_PW = '${{ secrets.DB_PW }}' >> .env
          working-directory: ./Flask_server
          echo DB_SCHEMA = '${{ secrets.DB_SCHEMA }}' >> .env
          working-directory: ./Flask_server
          echo DB_USER = '${{ secrets.DB_USER }}' >> .env
          working-directory: ./Flask_server
          cat .env
          working-directory: ./Flask_server
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: true
          file: ./Flask_server/dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-memo:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        working-directory: ${{ env.working-directory }}
        
  cd-pipeline:
    needs: build-image
    name: continuos deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./docker-compose.yaml"
          target: "/home/dev_hwan/"
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: "docker-compose pull && docker-compose up -d"

    
